data_D <- df
View(data_C)
# PANEL C: Memory in YA vs. OA
figC <- ggbarplot(data_C,
x = "age_group",
y = "dprime",
fill = "valence",
alpha = 0.7,
palette = "npg",
add = "mean_se",
xlab = "",
ylab = "d\'",
ylim = c(-0.45, 3.2),
position = position_dodge(0.8)) +
geom_hline(yintercept = 0) +
geom_jitter(aes(color = valence, fill = valence), alpha = 0.5,
position = position_jitterdodge(0.1))
knitr::opts_chunk$set(echo = TRUE)
# Load Libraries
library(tidyverse)
library(ggpubr)
library(rstatix)
library(lme4)
library(lmerTest)
library(emmeans)
# Set colorscales
npg_pal <- get_palette(palette = 'npg', 3)
npg_RL <- c(npg_pal[1], npg_pal[3])
# PANEL C: Memory in YA vs. OA
figC <- ggbarplot(data_C,
x = "age_group",
y = "dprime",
fill = "valence",
alpha = 0.7,
palette = "npg",
add = "mean_se",
xlab = "",
ylab = "d\'",
ylim = c(-0.45, 3.2),
position = position_dodge(0.8)) +
geom_hline(yintercept = 0) +
geom_jitter(aes(color = valence, fill = valence), alpha = 0.5,
position = position_jitterdodge(0.1))
valence.stat.test <- data_C %>% group_by(age_group) %>%
t_test(dprime ~ valence, detailed = TRUE, paired = TRUE)
p.valence.stat.test <- valence.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "age_group", fun = "mean_se", dodge = 0.8)
p.valence.stat.test <- p.valence.stat.test %>%
mutate(sig = case_when(p < 0.05 ~ '*'))
age.stat.test <- data_C %>% group_by(valence) %>%
t_test(dprime ~ age_group, detailed = TRUE, paired = FALSE)
p.age.stat.test <- age.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "age_group", group = 'valence', fun = "mean_se", dodge = 0.8)
p.age.stat.test <- p.age.stat.test %>%
mutate(sig = case_when(p < 0.05 ~ '*'))
figC <- figC + stat_pvalue_manual(p.valence.stat.test, label = 'sig', tip.length = 0.01,
step.increase = 0.08, y.position = 2.5, size = 8) +
stat_pvalue_manual(p.age.stat.test, label = 'sig', tip.length = 0.01,
step.increase = 0.08, y.position = 3) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))  +
theme(legend.position = 'none')
figC
knitr::opts_chunk$set(echo = TRUE)
# Load Libraries
library(tidyverse)
library(ggpubr)
library(rstatix)
library(lme4)
library(lmerTest)
library(emmeans)
# Set colorscales
npg_pal <- get_palette(palette = 'npg', 3)
npg_RL <- c(npg_pal[1], npg_pal[3])
# Read in data
df <- read_csv('anon_data_fig1.csv')
data_C <- df
data_D <- df
# PANEL C: Memory in YA vs. OA
figC <- ggbarplot(data_C,
x = "age_group",
y = "dprime",
fill = "valence",
alpha = 0.7,
palette = "npg",
add = "mean_se",
xlab = "",
ylab = "d\'",
ylim = c(-0.45, 3.2),
position = position_dodge(0.8)) +
geom_hline(yintercept = 0) +
geom_jitter(aes(color = valence, fill = valence), alpha = 0.5,
position = position_jitterdodge(0.1))
valence.stat.test <- data_C %>% group_by(age_group) %>%
t_test(dprime ~ valence, detailed = TRUE, paired = TRUE)
p.valence.stat.test <- valence.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "age_group", fun = "mean_se", dodge = 0.8)
p.valence.stat.test <- p.valence.stat.test %>%
mutate(sig = case_when(p < 0.05 ~ '*'))
age.stat.test <- data_C %>% group_by(valence) %>%
t_test(dprime ~ age_group, detailed = TRUE, paired = FALSE)
p.age.stat.test <- age.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "age_group", group = 'valence', fun = "mean_se", dodge = 0.8)
p.age.stat.test <- p.age.stat.test %>%
mutate(sig = case_when(p < 0.05 ~ '*'))
figC <- figC + stat_pvalue_manual(p.valence.stat.test, label = 'sig', tip.length = 0.01,
step.increase = 0.08, y.position = 2.5, size = 8) +
stat_pvalue_manual(p.age.stat.test, label = 'sig', tip.length = 0.01,
step.increase = 0.08, y.position = 3) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))  +
theme(legend.position = 'none')
figC
# PANEL A: Stats
print("+---------- Linear Mixed Effects Model ----------+")
dprime_mod <- lmer(dprime ~ age_group*valence + (1 | subject),
data_C)
summary(dprime_mod)
print("+---------- Paired T-test Post-Hoc Tests ----------+")
emm = emmeans(dprime_mod, ~ age_group*valence)
pairs(emm, simple = 'each', adjust = "none")
print("+---------- Linear Mixed Effects Model (control for learning) ----------+")
dprime_mod <- lmer(dprime ~ age_group*valence + learning_accuracy + (1 | subject),
data_C)
summary(dprime_mod)
print("+---------- Paired T-test Post-Hoc Tests ----------+")
emm = emmeans(dprime_mod, ~ age_group*valence)
pairs(emm, simple = 'each', adjust = "none")
data_D <- data_D %>% filter(biomarker_group != 'Younger\nAdults')
# PANEL D: Memory for all Conditions
figD <- ggbarplot(data_D,
x = "biomarker_group",
y = "dprime",
fill = "valence",
alpha = 0.7,
palette = "npg",
add = "mean_se",
xlab = "",
ylab = "d\'",
ylim = c(-0.45, 3.2),
position = position_dodge(0.8)) +
geom_hline(yintercept = 0) +
geom_jitter(aes(color = valence, fill = valence), alpha = 0.5,
position = position_jitterdodge(0.1)) +
theme(legend.position = 'none')
valence.stat.test <- data_D %>% group_by(biomarker_group) %>%
t_test(dprime ~ valence, detailed = TRUE, paired = TRUE)
p.valence.stat.test <- valence.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "biomarker_group", fun = "mean_se", dodge = 0.8)
age.stat.test <- data_D %>% group_by(valence) %>%
t_test(dprime ~ biomarker_group, detailed = TRUE, paired = FALSE)
p.age.stat.test <- age.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "biomarker_group", group = 'valence', fun = "mean_se", dodge = 0.8)
figD <- figD + stat_pvalue_manual(p.valence.stat.test, label = 'p', tip.length = 0.01,
step.increase = 0.08, y.position = 2.5) +
stat_pvalue_manual(p.age.stat.test, label = 'p', tip.length = 0.01,
step.increase = 0.08, y.position = 3) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))
figD
# PANEL B: Stats
print("+---------- Linear Mixed Effects Model ----------+")
dprime_mod <- lmer(dprime ~ valence*biomarker_group + age + sex + yrs_edu + (1 | subject),
data_D %>% filter(biomarker_group != 'Younger\nAdults'))
summary(dprime_mod)
print("+---------- Paired T-test Post-Hoc Tests ----------+")
emm = emmeans(dprime_mod, ~ biomarker_group*valence)
pairs(emm, simple = 'each', adjust = "none")
print("+---------- Linear Mixed Effects Model control for learning ----------+")
dprime_mod <- lmer(dprime ~ valence*biomarker_group + learning_accuracy + age + sex + yrs_edu + (1 | subject),
data_D %>% filter(biomarker_group != 'Younger\nAdults'))
summary(dprime_mod)
print("+---------- Paired T-test Post-Hoc Tests ----------+")
emm = emmeans(dprime_mod, ~ biomarker_group*valence)
pairs(emm, simple = 'each', adjust = "none")
# Read in data
df <- read_csv('anon_data_fig1.csv')
df$age_group <- factor(df$age_group, levels = c('Younger\nAdults',
'Older\nAdults'))
df$biomarker_group <- factor(df$biomarker_group, levels = c('Younger\nAdults',
'Normal\nAging',
'Preclinical\nAD'))
data_C <- df
data_D <- df
# PANEL C: Memory in YA vs. OA
figC <- ggbarplot(data_C,
x = "age_group",
y = "dprime",
fill = "valence",
alpha = 0.7,
palette = "npg",
add = "mean_se",
xlab = "",
ylab = "d\'",
ylim = c(-0.45, 3.2),
position = position_dodge(0.8)) +
geom_hline(yintercept = 0) +
geom_jitter(aes(color = valence, fill = valence), alpha = 0.5,
position = position_jitterdodge(0.1))
valence.stat.test <- data_C %>% group_by(age_group) %>%
t_test(dprime ~ valence, detailed = TRUE, paired = TRUE)
p.valence.stat.test <- valence.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "age_group", fun = "mean_se", dodge = 0.8)
p.valence.stat.test <- p.valence.stat.test %>%
mutate(sig = case_when(p < 0.05 ~ '*'))
age.stat.test <- data_C %>% group_by(valence) %>%
t_test(dprime ~ age_group, detailed = TRUE, paired = FALSE)
p.age.stat.test <- age.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "age_group", group = 'valence', fun = "mean_se", dodge = 0.8)
p.age.stat.test <- p.age.stat.test %>%
mutate(sig = case_when(p < 0.05 ~ '*'))
figC <- figC + stat_pvalue_manual(p.valence.stat.test, label = 'sig', tip.length = 0.01,
step.increase = 0.08, y.position = 2.5, size = 8) +
stat_pvalue_manual(p.age.stat.test, label = 'sig', tip.length = 0.01,
step.increase = 0.08, y.position = 3) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))  +
theme(legend.position = 'none')
figC
# PANEL A: Stats
print("+---------- Linear Mixed Effects Model ----------+")
dprime_mod <- lmer(dprime ~ age_group*valence + (1 | subject),
data_C)
summary(dprime_mod)
print("+---------- Paired T-test Post-Hoc Tests ----------+")
emm = emmeans(dprime_mod, ~ age_group*valence)
pairs(emm, simple = 'each', adjust = "none")
print("+---------- Linear Mixed Effects Model (control for learning) ----------+")
dprime_mod <- lmer(dprime ~ age_group*valence + learning_accuracy + (1 | subject),
data_C)
summary(dprime_mod)
print("+---------- Paired T-test Post-Hoc Tests ----------+")
emm = emmeans(dprime_mod, ~ age_group*valence)
pairs(emm, simple = 'each', adjust = "none")
data_D <- data_D %>% filter(biomarker_group != 'Younger\nAdults')
# PANEL D: Memory for all Conditions
figD <- ggbarplot(data_D,
x = "biomarker_group",
y = "dprime",
fill = "valence",
alpha = 0.7,
palette = "npg",
add = "mean_se",
xlab = "",
ylab = "d\'",
ylim = c(-0.45, 3.2),
position = position_dodge(0.8)) +
geom_hline(yintercept = 0) +
geom_jitter(aes(color = valence, fill = valence), alpha = 0.5,
position = position_jitterdodge(0.1)) +
theme(legend.position = 'none')
valence.stat.test <- data_D %>% group_by(biomarker_group) %>%
t_test(dprime ~ valence, detailed = TRUE, paired = TRUE)
p.valence.stat.test <- valence.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "biomarker_group", fun = "mean_se", dodge = 0.8)
age.stat.test <- data_D %>% group_by(valence) %>%
t_test(dprime ~ biomarker_group, detailed = TRUE, paired = FALSE)
p.age.stat.test <- age.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "biomarker_group", group = 'valence', fun = "mean_se", dodge = 0.8)
figD <- figD + stat_pvalue_manual(p.valence.stat.test, label = 'p', tip.length = 0.01,
step.increase = 0.08, y.position = 2.5) +
stat_pvalue_manual(p.age.stat.test, label = 'p', tip.length = 0.01,
step.increase = 0.08, y.position = 3) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))
figD
# PANEL B: Stats
print("+---------- Linear Mixed Effects Model ----------+")
dprime_mod <- lmer(dprime ~ valence*biomarker_group + age + sex + yrs_edu + (1 | subject),
data_D %>% filter(biomarker_group != 'Younger\nAdults'))
summary(dprime_mod)
print("+---------- Paired T-test Post-Hoc Tests ----------+")
emm = emmeans(dprime_mod, ~ biomarker_group*valence)
pairs(emm, simple = 'each', adjust = "none")
print("+---------- Linear Mixed Effects Model control for learning ----------+")
dprime_mod <- lmer(dprime ~ valence*biomarker_group + learning_accuracy + age + sex + yrs_edu + (1 | subject),
data_D %>% filter(biomarker_group != 'Younger\nAdults'))
summary(dprime_mod)
print("+---------- Paired T-test Post-Hoc Tests ----------+")
emm = emmeans(dprime_mod, ~ biomarker_group*valence)
pairs(emm, simple = 'each', adjust = "none")
data_D <- data_D %>% filter(biomarker_group != 'Younger\nAdults')
# PANEL D: Memory for all Conditions
figD <- ggbarplot(data_D,
x = "biomarker_group",
y = "dprime",
fill = "valence",
alpha = 0.7,
palette = "npg",
add = "mean_se",
xlab = "",
ylab = "d\'",
ylim = c(-0.45, 3.2),
position = position_dodge(0.8)) +
geom_hline(yintercept = 0) +
geom_jitter(aes(color = valence, fill = valence), alpha = 0.5,
position = position_jitterdodge(0.1)) +
theme(legend.position = 'none')
valence.stat.test <- data_D %>% group_by(biomarker_group) %>%
t_test(dprime ~ valence, detailed = TRUE, paired = TRUE)
p.valence.stat.test <- valence.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "biomarker_group", fun = "mean_se", dodge = 0.8)
age.stat.test <- data_D %>% group_by(valence) %>%
t_test(dprime ~ biomarker_group, detailed = TRUE, paired = FALSE)
p.age.stat.test <- age.stat.test %>%
filter(p < 0.05) %>%
add_xy_position(x = "biomarker_group", group = 'valence', fun = "mean_se", dodge = 0.8)
figD <- figD + stat_pvalue_manual(p.valence.stat.test, label = 'p', tip.length = 0.01,
step.increase = 0.08, y.position = 2.5) +
stat_pvalue_manual(p.age.stat.test, label = 'p', tip.length = 0.01,
step.increase = 0.08, y.position = 3) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))
figD
View(p.age.stat.test)
View(p.valence.stat.test)
levels(data_D$biomarker_group)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir = '/local_mount/space/acai/2/users/tm553/REST')
# Load Libraries
library(tidyverse)
library(ggpubr)
library(lme4)
library(lmerTest)
library(rstatix)
library(emmeans)
library(lsmeans)
# Load Libraries
library(tidyverse)
library(ggpubr)
library(lme4)
library(lmerTest)
library(rstatix)
library(emmeans)
library(lsmeans)
# Set colorscales
biomarker_group_cscale <- scale_color_manual(values = c("#549e3e", "#323690", "#B6357B"))
biomarker_group_fscale <- scale_fill_manual(values = c("#549e3e", "#323690", "#B6357B"))
pdir <- '/autofs/space/acai_002/users/tm553/REST/'
data_B <- read_csv('data_B.csv')
anon <- read_csv(paste0(pdir, 'sourcedata/anon.csv'))
pib_dvr <- read_csv(paste0(pdir, 'sourcedata/pib.csv'))
ftp <- read_csv(paste0(pdir, 'sourcedata/ftp.csv'))
data_C <- merge(anon, pib_dvr)
data_C <- data_C %>% select(-subject)
names(data_C) <- c('subject', "pib_date", "pib_status", "pib_dvr")
data_C <- merge(data_C, data_B, all = TRUE)
data_D <- merge(anon, ftp)
data_D <- data_D %>% select(-subject)
names(data_D) <- c('subject', "tau_date", "ftp_braak1_wmean_exclgb_pvc", "ftp_braak2_wmean_exclbg_pvc",
"ftp_braak3_wmean_exclbg_pvc", "ftp_global_wmean_pvc", "ftp_mtl_wmean_pvc",
"ftp_metaroi_wmean_pvc", "ftp_entorhinal_pvc", "ftp_left_entorhinal",
"ftp_right_entorhinal", "ftp_amygdala_pvc", "ftp_left_amygdala",
"ftp_right_amygdala", "ftp_tau_status_meta_cutpoint", "ftp_tau_status_braak_cutpoint")
data_D <- merge(data_D, data_B, all = TRUE)
data_E <- read_csv('data_E.csv')
#data_B <- data_B %>% mutate(biomarker_group = case_when(jack_status == 'Younger\nAdults' ~ 'Younger\nAdults',
#                                                        jack_status == 'Healthy\nOlder Adults' ~ 'Normal\nAging',
#                                                        jack_status == 'Jack A/B\nOlder Adults' ~ 'Preclinical\nAD'))
#data_C <- data_C %>% mutate(biomarker_group = case_when(jack_status == 'Younger\nAdults' ~ 'Younger\nAdults',
#                                                        jack_status == 'Healthy\nOlder Adults' ~ 'Normal\nAging',
#                                                        jack_status == 'Jack A/B\nOlder Adults' ~ 'Preclinical\nAD'))
data_B$biomarker_group <- factor(data_B$biomarker_group, levels = c('Younger\nAdults',
'Normal\nAging',
'Preclinical\nAD'))
data_E$biomarker_group <- factor(data_E$biomarker_group, c('Younger\nAdults',
'Normal\nAging',
'Preclinical\nAD'))
# Panel A
figB <- ggbarplot(data_B,
x = 'age_group',
y = 'fmt_bilat_vst',
fill = 'age_group',
color = 'black',
alpha = 0.5,
palette = c("#549e3e", "#643f95"),
add = c('mean_se'),
#position = position_dodge(0.8),
legend = 'none',
order = c('Younger\nAdults', 'Older\nAdults')) +
geom_jitter(aes(color = age_group,
fill = age_group,
alpha = 0.5),
position = position_jitterdodge(0.7))
age.stat.test <- data_B %>% t_test(fmt_bilat_vst ~ age_group, detailed = TRUE)
age.stat.test.p <- age.stat.test %>%
add_xy_position(x = 'age_group', fun = 'mean_se', dodge = 0.8)
age.stat.test.p <- age.stat.test.p %>% mutate(sig = case_when(p < 0.05 ~ '*',
p >= 0.05 ~ ''))
figB <- figB + stat_pvalue_manual(age.stat.test.p, label = 'sig', tip.length = 0.03,
step.increase = 0.08, y.position = 0.03,
size = 8, bracket_size = 1, hide.ns = T) +
xlab('') +
ylab('[18F]FMT Ki\n Ventral Striatum)') +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
theme_classic() +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
legend.position = 'none',
axis.text.x = element_text(color = 'black', size = 10),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 12),
axis.title.y = element_text(color = 'black', size = 12),
legend.title = element_blank())
figB
age.stat.test
cohens_d(data_B, fmt_bilat_vst~age_group)
# Test for difference in FMT signal based on preclinical AD status
pad.stat.test <- data_B %>%
t_test(fmt_bilat_vst ~ biomarker_group, detailed = TRUE)
pad.stat.test.p <- age.stat.test %>%
add_xy_position(x = 'age_group', fun = 'mean_se', dodge = 0.8)
pad.stat.test.p <- age.stat.test.p %>% mutate(sig = case_when(p < 0.05 ~ '*',
p >= 0.05 ~ ''))
pad.stat.test
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(tidyverse)
library(ggplot2)
library(dplyr)
library(emmeans)
# Set colorscales
age_group_cscale <- scale_color_manual(values = c("#643f95", "#549e3e"))
age_group_fscale <- scale_fill_manual(values = c("#643f95", "#549e3e"))
# Read in data
df <- read_csv('anon_dprime_by_conf.csv')
df$valence <- factor(df$valence, levels = c('Loss', 'Neutral', 'Reward'))
knitr::opts_chunk$set(echo = TRUE)
# Load Libraries
library(tidyverse)
library(ggpubr)
library(rstatix)
library(lme4)
library(lmerTest)
library(emmeans)
# Set colorscales
npg_pal <- get_palette(palette = 'npg', 3)
npg_RL <- c(npg_pal[1], npg_pal[3])
# Read in data
df <- read_csv('data_fig1.csv')
df$age_group <- factor(df$age_group, levels = c('Younger\nAdults',
'Older\nAdults'))
df$biomarker_group <- factor(df$biomarker_group, levels = c('Younger\nAdults',
'Normal\nAging',
'Preclinical\nAD'))
data_C <- df
data_D <- df
packageVersion(tidyverse)
packageVersion('tidyverse')
packageVersion('ggplot2')
packageVersion('ggpubr')
packageVersion('rstatix')
packageVersion('lme4')
packageVersion('lmerTest')
packageVersion('emmeans')
knitr::opts_chunk$set(echo = TRUE)
# Load Libraries
library(tidyverse)
library(ggpubr)
library(lme4)
library(lmerTest)
library(rstatix)
library(emmeans)
library(lsmeans)
# Set colorscales
biomarker_group_cscale <- scale_color_manual(values = c("#549e3e", "#323690", "#B6357B"))
biomarker_group_fscale <- scale_fill_manual(values = c("#549e3e", "#323690", "#B6357B"))
# Read in data
data_BCD <- read_csv('data_fig2bcd.csv')
data_E <- read_csv('data_fig2e.csv')
data_E$biomarker_group <- factor(data_E$biomarker_group,
levels = c('Younger\nAdults',
'Normal\nAging',
'Preclinical\nAD'))
packageVersion('tidyverse')
packageVersion('ggpubr')
packageVersion('lme4')
packageVersion('lmerTest')
packageVersion('rstatix')
packageVersion('emmeans')
packageVersion('lsmeans')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(lubridate)
alldates <- read_csv('data_sup_fig02.csv')
packageVersion(tidyverse)
packageVersion('tidyverse')
packageVersion('ggplot2')
packageVersion('lubridate')
packageVersion('ggsci')
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(tidyverse)
library(ggplot2)
library(dplyr)
library(emmeans)
# Set colorscales
age_group_cscale <- scale_color_manual(values = c("#643f95", "#549e3e"))
age_group_fscale <- scale_fill_manual(values = c("#643f95", "#549e3e"))
# Read in data
df <- read_csv('anon_dprime_by_conf.csv')
df$valence <- factor(df$valence, levels = c('Loss', 'Neutral', 'Reward'))
packageVersion('tidyverse')
packageVersion('ggplot2')
packageVersion('dplyr')
packageVersion('emmeans')
