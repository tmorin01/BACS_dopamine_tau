dprime <- read_csv('sourcedata/anon_dprime.csv')
dprime_total <- read_csv('sourcedata/anon_dprime_total.csv')
# Panel B data (FMT vs. Rem-Frgt Betas)
data_B <- roistats %>% filter(roi == 'PHCfunc_beta', epoch == 'Trg')
data_B <- merge(data_B, demographics, all = T)
data_B <- merge(data_B, exclusions, all = T)
data_B <- merge(data_B, fmt, all = T)
data_B <- merge(data_B, pad, all = T)
data_B <- merge(data_B, ftp, all = T)
data_B <- merge(data_B, learning_total, all = T)
data_B <- merge(data_B, dprime_total, all = T)
# Filter for exclusions
data_B <- data_B %>% filter(exclude_memory == FALSE, exclude_fmri_am == FALSE)
data_B[data_B$age_group == 'YA',]$jack_detailed <- 'Younger\nAdults'
data_B[data_B$age_group == 'YA',]$jack_status <- 'Younger\nAdults'
data_B$jack_status <- fct_recode(data_B$jack_status, 'Healthy\nOlder Adults' = 'Healthy',
"Jack A/B\nOlder Adults" = "JackA/B")
data_B$jack_status <- fct_relevel(data_B$jack_status, 'Younger\nAdults',
'Healthy\nOlder Adults', 'Jack A/B\nOlder Adults')
data_B[data_B$age_group == 'YA',]$ftp_tau_status_braak_cutpoint <- 'Younger\nAdults'
data_B[data_B$age_group == 'YA',]$ftp_tau_status_braak_cutpoint <- 'Younger\nAdults'
#ata_B$ftp_tau_status_braak_cutpoint <- fct_recode(data_B$ftp_tau_status_braak_cutpoint, 'Healthy\nOlder Adults' = 'Healthy',
#                                 "Jack A/B\nOlder Adults" = "JackA/B")
data_B$ftp_tau_status_braak_cutpoint <- fct_relevel(data_B$ftp_tau_status_braak_cutpoint, 'Younger\nAdults',
'Tau-', 'Tau+')
# Make wide format for Rem vs. Forgotten contrast
data_B <- pivot_wider(data_B, names_from = memory, values_from = c(beta))
data_B$beta_rvf <- data_B$remembered - data_B$forgot
data_B <- data_B %>% select(-c(remembered, forgot))
data_B <- pivot_wider(data_B, names_from = valence, values_from = c(beta_rvf))
data_B$beta_rvf <- rowMeans(data_B %>% select(reward, neutral, loss))
data_B <- data_B %>% select(-c(reward, neutral, loss))
# Panel A (Rem vs. Frgt. Betas by Jack Status)
data_A <- data_B
data_A <- data_A %>% mutate(biomarker_group = case_when(jack_status == 'Younger\nAdults' ~ 'Younger\nAdults',
jack_status == 'Healthy\nOlder Adults' ~ 'Normal\nAging',
jack_status == 'Jack A/B\nOlder Adults' ~ 'Preclinical\nAD'))
data_A <- data_A %>% select(subject, age, sex, yrs_edu, age_group, biomarker_group,
ftp_braak2_wmean_exclbg_pvc,
ftp_tau_status_braak_cutpoint,
fmt_bilat_vst, beta_rvf,
dprime_total, total_learning_acc)
names(data_A) <- c('subject', 'age', 'sex', 'yrs_edu', 'age_group', 'biomarker_group',
'ftp_braak34_suvr', 'tau_status', 'fmt_ki_vst', 'bold',
'dprime_total', 'learning_total')
write_csv(data_A, 'data_sup_fig06.csv')
setwd("~/Desktop/OSF/sup_fig06")
knitr::opts_chunk$set(echo = TRUE)
# Load Libraries
library(tidyverse)
library(ggpubr)
library(lme4)
library(lmerTest)
library(rstatix)
# Set colorscales
jack_status_cscale <- scale_color_manual(values = c("#549e3e", "#323690", "#B6357B"))
jack_status_fscale <- scale_fill_manual(values = c("#549e3e", "#323690", "#B6357B"))
df <- read_csv('data_sup_fig06.csv')
figA <- df %>%
ggplot(aes(x = ftp_braak34_suvr, y = bold)) +
geom_point() +
geom_smooth(method = 'lm', limit = 0.9, linewidth = 2) +
theme_classic() +
xlab(bquote('[18F]FTP SUVR\n(Braak 3/4 Regions)')) +
ylab('fMRI Beta Coefficient\n(Remembered vs. Forgotten)') +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
legend.position = 'none',
axis.text.x = element_text(color = 'black', size = 8),
axis.text.y = element_text(color = 'black', size = 8),
axis.title.x = element_text(color = 'black', size = 10),
axis.title.y = element_text(color = 'black', size = 10),
legend.title = element_blank(),
aspect.ratio = 1)
figA
# Stats for Panel A
# All subjects, simple model
lm1 <- lm(bold ~ ftp_braak34_suvr, data = df)
print('==========================================================================')
summary(lm1)
print('==========================================================================')
# All subjects: memory, learning regressed
lm2 <- lm(bold ~ ftp_braak34_suvr + dprime_total + learning_total, data = df)
print('==========================================================================')
summary(lm2)
print('==========================================================================')
# Just older adults, simple model
lm3 <- lm(bold ~ ftp_braak34_suvr + age + sex + yrs_edu,
data = data_A %>% filter(!is.na(ftp_braak34_suvr)))
# Stats for Panel A
# All subjects, simple model
lm1 <- lm(bold ~ ftp_braak34_suvr, data = df)
print('==========================================================================')
summary(lm1)
print('==========================================================================')
# All subjects: memory, learning regressed
lm2 <- lm(bold ~ ftp_braak34_suvr + dprime_total + learning_total, data = df)
print('==========================================================================')
summary(lm2)
print('==========================================================================')
# Just older adults, simple model
lm3 <- lm(bold ~ ftp_braak34_suvr + age + sex + yrs_edu,
data = df %>% filter(!is.na(ftp_braak34_suvr)))
print('==========================================================================')
summary(lm3)
print('==========================================================================')
# NEEDSWORK: is this necessary? (added from AB comment)
lm4 <- lm(bold ~ ftp_braak34_suvr*jack_status + age + sex + yrs_edu,
data = df %>% filter(!is.na(ftp_braak34_suvr)))
# Stats for Panel A
# All subjects, simple model
lm1 <- lm(bold ~ ftp_braak34_suvr, data = df)
print('==========================================================================')
summary(lm1)
print('==========================================================================')
# All subjects: memory, learning regressed
lm2 <- lm(bold ~ ftp_braak34_suvr + dprime_total + learning_total, data = df)
print('==========================================================================')
summary(lm2)
print('==========================================================================')
# Just older adults, simple model
lm3 <- lm(bold ~ ftp_braak34_suvr + age + sex + yrs_edu,
data = df %>% filter(!is.na(ftp_braak34_suvr)))
print('==========================================================================')
summary(lm3)
print('==========================================================================')
# NEEDSWORK: is this necessary? (added from AB comment)
lm4 <- lm(bold ~ ftp_braak34_suvr*biomarker_group + age + sex + yrs_edu,
data = df %>% filter(!is.na(ftp_braak34_suvr)))
View(df)
knitr::opts_chunk$set(echo = TRUE)
# Load Libraries
library(tidyverse)
library(ggpubr)
library(lme4)
library(lmerTest)
library(rstatix)
# Set colorscales
jack_status_cscale <- scale_color_manual(values = c("#549e3e", "#323690", "#B6357B"))
jack_status_fscale <- scale_fill_manual(values = c("#549e3e", "#323690", "#B6357B"))
df <- read_csv('data_sup_fig06.csv')
figA <- df %>%
ggplot(aes(x = ftp_braak34_suvr, y = bold)) +
geom_point() +
geom_smooth(method = 'lm', limit = 0.9, linewidth = 2) +
theme_classic() +
xlab(bquote('[18F]FTP SUVR\n(Braak 3/4 Regions)')) +
ylab('fMRI Beta Coefficient\n(Remembered vs. Forgotten)') +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
legend.position = 'none',
axis.text.x = element_text(color = 'black', size = 8),
axis.text.y = element_text(color = 'black', size = 8),
axis.title.x = element_text(color = 'black', size = 10),
axis.title.y = element_text(color = 'black', size = 10),
legend.title = element_blank(),
aspect.ratio = 1)
figA
# Stats for Panel A
# All subjects, simple model
lm1 <- lm(bold ~ ftp_braak34_suvr, data = df)
print('==========================================================================')
summary(lm1)
print('==========================================================================')
# All subjects: memory, learning regressed
lm2 <- lm(bold ~ ftp_braak34_suvr + dprime_total + learning_total, data = df)
print('==========================================================================')
summary(lm2)
print('==========================================================================')
# Just older adults, simple model
lm3 <- lm(bold ~ ftp_braak34_suvr + age + sex + yrs_edu,
data = df %>% filter(!is.na(ftp_braak34_suvr)))
print('==========================================================================')
summary(lm3)
print('==========================================================================')
# NEEDSWORK: is this necessary? (added from AB comment)
lm4 <- lm(bold ~ ftp_braak34_suvr*biomarker_group + age + sex + yrs_edu,
data = df %>% filter(!is.na(ftp_braak34_suvr)))
print('==========================================================================')
summary(lm4)
print('==========================================================================')
# Panel B
figB <- df %>% filter(! is.na(tau_group)) %>%
ggplot(aes(x = fmt_ki_vst, y = bold, group = tau_group,
color = tau_group, fill=tau_group)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', limit = 0.9, linewidth = 2) +
scale_fill_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
scale_color_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
theme_classic() +
xlab(bquote('[18F]FMT Ki\n(Ventral Striatum)')) +
ylab('fMRI Beta Coefficient\n(Remembered vs. Forgotten)') +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
#legend.position = 'none',
axis.text.x = element_text(color = 'black', size = 8),
axis.text.y = element_text(color = 'black', size = 8),
axis.title.x = element_text(color = 'black', size = 10),
axis.title.y = element_text(color = 'black', size = 10))
View(df)
# Panel B
figB <- df %>% filter(! is.na(tau_status)) %>%
ggplot(aes(x = fmt_ki_vst, y = bold, group = tau_status,
color = tau_status, fill=tau_status)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', limit = 0.9, linewidth = 2) +
scale_fill_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
scale_color_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
theme_classic() +
xlab(bquote('[18F]FMT Ki\n(Ventral Striatum)')) +
ylab('fMRI Beta Coefficient\n(Remembered vs. Forgotten)') +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
#legend.position = 'none',
axis.text.x = element_text(color = 'black', size = 8),
axis.text.y = element_text(color = 'black', size = 8),
axis.title.x = element_text(color = 'black', size = 10),
axis.title.y = element_text(color = 'black', size = 10))
figB
df <- read_csv('data_sup_fig06.csv')
df$tau_status <- factor(df$tau_status, levels = c('Younger\nAdults', 'Tau-', 'Tau+'))
# Panel B
figB <- df %>% filter(! is.na(tau_status)) %>%
ggplot(aes(x = fmt_ki_vst, y = bold, group = tau_status,
color = tau_status, fill=tau_status)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', limit = 0.9, linewidth = 2) +
scale_fill_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
scale_color_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
theme_classic() +
xlab(bquote('[18F]FMT Ki\n(Ventral Striatum)')) +
ylab('fMRI Beta Coefficient\n(Remembered vs. Forgotten)') +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
#legend.position = 'none',
axis.text.x = element_text(color = 'black', size = 8),
axis.text.y = element_text(color = 'black', size = 8),
axis.title.x = element_text(color = 'black', size = 10),
axis.title.y = element_text(color = 'black', size = 10))
figB
# Panel B
figB <- df %>% filter(! is.na(tau_status)) %>%
ggplot(aes(x = fmt_ki_vst, y = bold, group = tau_status,
color = tau_status, fill=tau_status)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', limit = 0.9, linewidth = 2) +
scale_fill_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
scale_color_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
theme_classic() +
xlab(bquote('[18F]FMT Ki\n(Ventral Striatum)')) +
ylab('fMRI Beta Coefficient\n(Remembered vs. Forgotten)') +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
#legend.position = 'none',
axis.text.x = element_text(color = 'black', size = 8),
axis.text.y = element_text(color = 'black', size = 8),
axis.title.x = element_text(color = 'black', size = 10),
axis.title.y = element_text(color = 'black', size = 10),
aspect.ratio = 1)
figB
# Stats for Panel B
# All subjects, simple model
lm1 <- lm(bold ~ ftp_braak34_suvr*fmt_ki_vst, data = df)
print('==========================================================================')
summary(lm1)
print('==========================================================================')
# All subjects: memory, learning regressed
lm2 <- lm(bold ~ ftp_braak34_suvr*fmt_ki_vst + dprime_total + learning_total, data = df)
print('==========================================================================')
summary(lm2)
print('==========================================================================')
# Just older adults, simple model
lm3 <- lm(bold ~ ftp_braak34_suvr*fmt_ki_vst + age + sex + yrs_edu,
data = df %>% filter(!is.na(ftp_braak34_suvr)))
print('==========================================================================')
summary(lm3)
print('==========================================================================')
# Just older adults: memory, learning regressed
lm4 <- lm(bold ~ ftp_braak34_suvr*fmt_ki_vst + dprime_total + learning_total + age + sex + yrs_edu,
data = df %>% filter(!is.na(ftp_braak34_suvr)))
print('==========================================================================')
summary(lm4)
print('==========================================================================')
fmri_mem <- ggarrange(figA, figB,
ncol = 2,
labels = c('A', 'B'),
widths = c(0.6, 1))
ggsave(fmri_mem, filename = 'sup_fig06.pdf', width = 6, height = 3, units = 'in')
fmri_mem
setwd("~/Desktop/OSF/00_organize_data")
df <- read_csv('data_fig4.csv')
df <- read_csv('data_fig4bc.csv')
View(df)
ftp <- read_csv('sourcedata/ftp.csv')
View(df)
ftp <- read_csv('sourcedata/anon_ftp.csv')
df <- merge(df, ftp, all = T)
df <- read_csv('data_fig4bc.csv')
ftp <- read_csv('sourcedata/anon_ftp.csv')
exclusions <- read_csv('sourcedata/anon_exclusions.csv')
ftp <- merge(ftp, exclusions)
ftp <- ftp %>% filter(exclude_memory == 0)
df <- merge(df, ftp, all = T)
View(df)
df <- df %>% mutate(tau_status = case_when(age_group == 'Younger\nAdults' ~ 'Younger\nAdults',
ftp_braak2_wmean_exclbg_pvc < 1.26 == 'Tau-',
df <- df %>% mutate(tau_status = case_when(age_group == 'Younger\nAdults' ~ 'Younger\nAdults',
ftp_braak2_wmean_exclbg_pvc < 1.26 ~ 'Tau-',
ftp_braak2_wmean_exclbg_pvc >= 1.26 ~ 'Tau+'))
View(df)
View(df)
df <- read_csv('data_fig4bc.csv')
ftp <- read_csv('sourcedata/anon_ftp.csv')
exclusions <- read_csv('sourcedata/anon_exclusions.csv')
ftp <- merge(ftp, exclusions)
ftp <- ftp %>% filter(exclude_memory == 0)
df <- merge(df, ftp, all = T)
df <- df %>% mutate(tau_status = case_when(age_group == 'Younger\nAdults' ~ 'Younger\nAdults',
ftp_braak2_wmean_exclbg_pvc < 1.26 ~ 'Tau-',
ftp_braak2_wmean_exclbg_pvc >= 1.26 ~ 'Tau+'))
df <- df %>% select(subject, age, sex, yrs_edu, age_group, biomarker_group,
pos_index, learning_RewVsLoss, fmt_ki_vst,
ftp_braak2_wmean_exclbg_pvc, tau_status)
names(df) <- c('subject', 'age', 'sex', 'yrs_edu', 'age_group', 'biomarker_group',
'pos_index', 'learning_RewVsLoss', 'fmt_ki_vst', 'ftp_braak34_suvr',
'tau_status')
View(df)
write_csv(df, 'sup_fig07.csv')
write_csv(df, 'data_sup_fig07.csv')
setwd("~/Desktop/OSF/sup_fig07")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/local_mount/space/acai/2/users/tm553/REST')
# Load Libraries
library(tidyverse)
library(ggpubr)
library(rstatix)
library(lme4)
library(lmerTest)
# Set colorscales
jack_status_cscale <- scale_color_manual(values = c("#549e3e", "#323690", "#B6357B"))
jack_status_fscale <- scale_fill_manual(values = c("#549e3e", "#323690", "#B6357B"))
df <- read_csv('data_sup_fig07.csv')
df <- read_csv('data_sup_fig07.csv')
df$tau_status <- factor(df$tau_status, levels = c('Younger\nAdults',
'Tau-', 'Tau+')
df <- read_csv('data_sup_fig07.csv')
df$tau_status <- factor(df$tau_status, levels = c('Younger\nAdults',
'Tau-', 'Tau+'))
View(df)
figB <- df %>%
ggplot(aes(x = ftp_braak34_suvr, y = pos_index)) +
geom_point() +
geom_smooth(method = 'lm', limit = 0.9, linewidth = 2) +
theme_classic() +
xlab(bquote('[18F]FTP SUVR\n(Braak 3/4 Regions)')) +
ylab(bquote(atop('Positivity Index', (H[Rew] - H[Loss])/(H[Rew] + H[Loss])))) +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
axis.text.x = element_text(color = 'black', size = 8),
axis.text.y = element_text(color = 'black', size = 8),
axis.title.x = element_text(color = 'black', size = 10),
axis.title.y = element_text(color = 'black', size = 10))
figB
figB <- df %>%
ggplot(aes(x = ftp_braak34_suvr, y = pos_index)) +
geom_point() +
geom_smooth(method = 'lm', limit = 0.9, linewidth = 2) +
theme_classic() +
xlab(bquote('[18F]FTP SUVR\n(Braak 3/4 Regions)')) +
ylab(bquote(atop('Positivity Index', (H[Rew] - H[Loss])/(H[Rew] + H[Loss])))) +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
axis.text.x = element_text(color = 'black', size = 8),
axis.text.y = element_text(color = 'black', size = 8),
axis.title.x = element_text(color = 'black', size = 10),
axis.title.y = element_text(color = 'black', size = 10),
aspect.ratio = 1)
figB
# Stats for Panel B
# Simplest model
lm1 <- lm(pos_index ~ ftp_braak34_suvr + age + sex + yrs_edu, data = data_C)
# Stats for Panel B
# Simplest model
lm1 <- lm(pos_index ~ ftp_braak34_suvr + age + sex + yrs_edu, data = df)
summary(lm1)
# Model accounting for learning accuracy
lm2 <- lm(pos_index ~ ftp_braak34_suvr + learning_RewVsLoss, data = df)
summary(lm2)
figA <- df %>%
ggplot(aes(x = ftp_braak34_suvr, y = pos_index)) +
geom_point() +
geom_smooth(method = 'lm', limit = 0.9, linewidth = 2) +
theme_classic() +
xlab(bquote('[18F]FTP SUVR\n(Braak 3/4 Regions)')) +
ylab(bquote(atop('Positivity Index', (H[Rew] - H[Loss])/(H[Rew] + H[Loss])))) +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
axis.text.x = element_text(color = 'black', size = 8),
axis.text.y = element_text(color = 'black', size = 8),
axis.title.x = element_text(color = 'black', size = 10),
axis.title.y = element_text(color = 'black', size = 10),
aspect.ratio = 1)
figA
# Stats for Panel A
# Simplest model
lm1 <- lm(pos_index ~ ftp_braak34_suvr + age + sex + yrs_edu, data = df)
summary(lm1)
# Model accounting for learning accuracy
lm2 <- lm(pos_index ~ ftp_braak34_suvr + learning_RewVsLoss, data = df)
summary(lm2)
figB <- df %>% filter(!is.na(tau_status)) %>%
ggplot(aes(x = fmt_ki_vst, y = pos_index, group = tau_status,
color = tau_status, fill = tau_status)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', limit = 0.9, linewidth = 2) +
scale_fill_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
scale_color_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
theme_classic() +
xlab(bquote('[18F]FMT Ki\n(Ventral Striatum)')) +
ylab('\u0394 d\' (Reward vs. Loss)') +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
axis.text.x = element_text(color = 'black', size = 8),
axis.text.y = element_text(color = 'black', size = 8),
axis.title.x = element_text(color = 'black', size = 10),
axis.title.y = element_text(color = 'black', size = 10),
aspect.ratio = 1)
figB
figB <- df %>% filter(!is.na(tau_status)) %>%
ggplot(aes(x = fmt_ki_vst, y = pos_index, group = tau_status,
color = tau_status, fill = tau_status)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', limit = 0.9, linewidth = 2) +
scale_fill_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
scale_color_manual('[18F]FTP Status', values = c("#549e3e", "#323690", "#B6357B")) +
theme_classic() +
xlab(bquote('[18F]FMT Ki\n(Ventral Striatum)')) +
ylab('\u0394 d\' (Reward vs. Loss)') +
theme(panel.background = element_blank(),
axis.line = element_line(color = 'black'),
axis.text.x = element_text(color = 'black', size = 8),
axis.text.y = element_text(color = 'black', size = 8),
axis.title.x = element_text(color = 'black', size = 10),
axis.title.y = element_text(color = 'black', size = 10),
aspect.ratio = 1)
figB
# Stats for Panel B
# Simplest model
lm1 <- lm(pos_index ~ fmt_ki_vst*ftp_braak34_suvr + age + sex + yrs_edu, data = df)
summary(lm1)
# Model accounting for learning accuracy
lm2 <- lm(pos_index ~ fmt_ki_vst*ftp_braak34_suvr + learning_RewVsLoss, data = df)
summary(lm2)
pos_fig <- ggarrange(figA, figB,
ncol = 2,
labels = c('A', 'B'),
widths = c(0.6, 1))
ggsave(pos_fig, filename = 'sup_fig07.pdf', width = 6, height = 3, units = 'in')
pos_fig
# Stats for Panel B
# Simplest model
lm1 <- lm(pos_index ~ fmt_ki_vst*ftp_braak34_suvr + age + sex + yrs_edu,
data = df %>% filter(!is,na(ftp_braak34_suvr)))
# Stats for Panel B
# Simplest model
lm1 <- lm(pos_index ~ fmt_ki_vst*ftp_braak34_suvr + age + sex + yrs_edu,
data = df %>% filter(!is.na(ftp_braak34_suvr)))
summary(lm1)
# Model accounting for learning accuracy
lm2 <- lm(pos_index ~ fmt_ki_vst*ftp_braak34_suvr + learning_RewVsLoss,
data = df %>% filter(!is.na(ftp_braak34_suvr)))
summary(lm2)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Desktop/OSF/sup_fig08")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(emmeans)
age_group_cscale <- scale_color_manual(values = c("#643f95", "#549e3e"))
age_group_fscale <- scale_fill_manual(values = c("#643f95", "#549e3e"))
df <- read_csv('anon_dprime_by_conf.csv')
df$valence <- factor(df$valence, levels = c('Loss', 'Neutral', 'Reward'))
# Plot dprime for OAs and YAs across Valence and Confidence Level
df %>%
ggplot(aes(x=valence, y=dprime, fill=age_group, color=age_group)) +
geom_hline(yintercept=0) +
geom_point(aes(x=valence, y=dprime), alpha = 0.5, position = position_dodge(0.8)) +
stat_summary(fun.y = "mean", geom="bar", size=1, width=0.75, position=position_dodge(0.8), alpha=0.5) +
stat_summary(fun.data = mean_se, geom="errorbar", width=0.3, size=1, position=position_dodge(0.8)) +
labs(title="Dprime by Confidence Level") +
age_group_cscale +
age_group_fscale +
xlab("") +
ylab("dprime") +
facet_wrap(.~confidence) +
theme(panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = "bottom",
axis.text.x = element_text(colour = "black", size = 12),
axis.text.y = element_text(colour = "black", size = 12)) +
scale_y_continuous(expand = expansion(mult = c(0.1,0.1)))
mod <- lm(dprime ~ confidence*age_group*valence,
data = df)
emm = emmeans(mod, ~ confidence*age_group*valence)
pairs(emm, simple = 'each', adjust = "none")
dsum <- df %>% group_by(valence, confidence, age_group) %>% summarize(
dprime_mean = mean(dprime, na.rm = TRUE),
dprime_std = sd(dprime, na.rm = TRUE),
dprime_est = (t.test(dprime, na.rm = TRUE)$estimate),
dprime_T = (t.test(dprime, na.rm = TRUE)$statistic),
dprime_p = (t.test(dprime, na.rm = TRUE)$p.value))
dsum
